{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!-- Header -->\\n<header id=\\\"header\\\">\\n  <!-- Center Header -->\\n  <div id=\\\"center-header\\\">\\n      <div class=\\\"container\\\">\\n          <div class=\\\"header-logo\\\">\\n              <a href=\\\"#\\\" class=\\\"logo\\\">\\n                  <img src=\\\"assets/img/logo.png\\\" alt=\\\"\\\">\\n              </a>\\n    <p>Developed by Ankur Sharma(\\n          <a href=\\\"https://www.linkedin.com/in/ankur-sharma-341446b1/\\\">Contact Me </a>)</p>\\n          </div>\\n          <div class=\\\"header-ads\\\">\\n              <img class=\\\"center-block\\\" src=\\\"assets/img/ad-2.jpg\\\" alt=\\\"\\\">\\n          </div>\\n      </div>\\n  </div>\\n  <!-- /Center Header -->\\n</header>\\n<!-- /Header -->\\n\\n\\n<!-- SECTION -->\\n<div class=\\\"section\\\">\\n  <!-- CONTAINER -->\\n  <div class=\\\"container-fluid\\\">\\n      <!-- ROW -->\\n      <div class=\\\"row\\\">\\n          <!-- Main Column -->\\n          <div class=\\\"col-md-12\\\">\\n              <!-- section title -->\\n              <div id=\\\"mainNav\\\" class=\\\"section-title\\\">\\n                  <h2 class=\\\"title\\\">Trending News</h2>\\n                  <!-- tab nav -->\\n                  <ul class=\\\"nav nav-tabs pull-right\\\" role=\\\"tablist\\\">\\n                      <li class=\\\"active\\\">\\n                          <a data-toggle=\\\"tab\\\" (click)=\\\"getNews('all')\\\">International</a>\\n                      </li>\\n                      <li>\\n                          <a data-toggle=\\\"tab\\\" (click)=\\\"getNews('general')\\\">India</a>\\n                      </li>\\n                      <li>\\n                          <a data-toggle=\\\"tab\\\" (click)=\\\"getNews('business')\\\">Business</a>\\n                      </li>\\n                      <li>\\n                          <a data-toggle=\\\"tab\\\" (click)=\\\"getNews('entertainment')\\\">Entertainment</a>\\n                      </li>\\n                      <li>\\n                          <a data-toggle=\\\"tab\\\" (click)=\\\"getNews('health')\\\">Health</a>\\n                      </li>\\n                      <li>\\n                          <a data-toggle=\\\"tab\\\" (click)=\\\"getNews('science')\\\">Science</a>\\n                      </li>\\n                      <li>\\n                          <a data-toggle=\\\"tab\\\" (click)=\\\"getNews('sport')\\\">Sport</a>\\n                      </li>\\n                      <li>\\n                          <a data-toggle=\\\"tab\\\" (click)=\\\"getNews('technology')\\\">Technology</a>\\n                      </li>\\n                      <li>\\n                          <a data-toggle=\\\"tab\\\" (click)=\\\"getNews('offbeat')\\\">Offbeat</a>\\n                      </li>\\n                  </ul>\\n                  <!-- /tab nav -->\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n  <div align=\\\"center\\\" *ngIf=\\\"loading\\\"> \\n      <img src=\\\"assets/img/loading.gif\\\" alt=\\\"Loading...\\\"/>\\n  </div>\\n  <!-- /section title -->\\n  <!-- Tab content -->\\n  <div id=\\\"all\\\" class=\\\"tab-content\\\">\\n      <!-- tab1 -->\\n      <div class=\\\"tab-pane fade in active\\\">\\n          <!-- row -->\\n          <div class=\\\"container-fluid\\\">\\n          <div class=\\\"row\\\" style=\\\"display:flex;flex-wrap:wrap;\\\">\\n              <div class=\\\"col-md-3 col-sm-6\\\" *ngFor=\\\"let news of newsSource\\\" (deferLoad)=\\\"news.show = true\\\">\\n                  <div>\\n                      <table style=\\\"border: 3px solid black;\\\">\\n                          <tr>\\n                              <td style=\\\"border: 3px solid black;\\\" *ngIf=\\\"news.show\\\">\\n                                  <a (click)=\\\"detailNews(news.url)\\\">\\n                                      <img src=\\\"{{news.urlToImage}}\\\" height=\\\"150\\\" width=\\\"100%\\\" alt=\\\"Image not Available\\\">\\n                                  </a>\\n                              </td>\\n                          </tr>\\n                      </table>\\n                      <font size=\\\"2\\\" face=\\\"serif\\\" color=\\\"grey\\\">{{news.publishedAt}}</font>\\n                      <h6>\\n                          <a ng-click=\\\"detailNews(news.url)\\\">\\n                              <b style=\\\"font-family: 'Droid Serif'; font-size: 17px\\\">{{news.title}}:</b>\\n                              <i style=\\\"color:maroon;font-family: 'Playfair Display'; font-size: 15px\\\">{{news.description}}</i>\\n                          </a>\\n                      </h6>\\n                  </div>\\n\\n\\n\\n              </div>\\n          </div>\\n    </div>\\n          <hr/>\\n          <!-- /ARTICLE -->\\n      </div>\\n  </div>\\n  <!-- /row -->\\n</div>\\n<!-- /Main Column -->\\n\\n<!-- Tab content -->\\n<!-- END OF TABS -->\\n<!-- /ROW -->\\n\\n<!-- /CONTAINER -->\\n<!-- /SECTION -->\\n<!-- /FOOTER -->\\n\\n<!-- Back to top -->\\n<div id=\\\"back-to-top\\\"></div>\\n<!-- Back to top -->\\n<script>\\n  $('#back-to-top').on(\\\"click\\\", function () {\\n      $('body,html').animate({\\n          scrollTop: 0\\n      }, 500);\\n  });\\n  /* \\n  window.onscroll = function() {fixHeader()};\\n  var navbar = document.getElementById(\\\"mainNav\\\");\\n  var sticky = navbar.offsetTop;\\n  function fixHeader() {\\n      if (window.pageYOffset >= sticky) {\\n          navbar.classList.add(\\\"sticky\\\")\\n      } else {\\n          navbar.classList.remove(\\\"sticky\\\");\\n      }\\n  }\\n  */\\n</script>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private http: HttpClient){}\n  title = 'BlazingNews';\n  newsSource: object;\n  loading: boolean;\n  ngOnInit(){\n    this.http.get(\"https://35.224.154.91:3000/all\").subscribe((res: Array<object>)=>{\n      for(var elem of res){\n        elem[\"show\"] = false;\n        if(elem[\"urlToImage\"].includes(\"./img\")){\n          let arr = elem[\"urlToImage\"].split(\"/\");\n          elem[\"urlToImage\"] = './assets/img/'+arr[2];\n        }\n      }\n      this.newsSource = res;\n    })\n  }\n\n  getNews(source){\n    this.newsSource = null;\n    this.loading = true;\n    this.http.get(\"https://35.224.154.91:3000/\"+source).subscribe((res: Array<object>)=>{\n      for(var elem of res){\n        elem[\"show\"] = false;\n        if(elem[\"urlToImage\"].includes(\"./img\")){\n          let arr = elem[\"urlToImage\"].split(\"/\");\n          elem[\"urlToImage\"] = './assets/img/'+arr[2];\n        }\n      }\n      this.newsSource = res;\n      this.loading = false;\n    })\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DeferLoadModule } from '@trademe/ng-defer-load';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    DeferLoadModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}